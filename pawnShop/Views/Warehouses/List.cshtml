@model Paginated<WarehousesModel>
@{
    ViewData["Title"] = "List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>List Warehouse</h1>

<div class="card">
    <div class="card-header">
        List Warehouse
    </div>

    <div class="card-body">
        <form class="form-check-inline" method="get" action="@Url.Action("List","Warehouses")">
            <input type="text" name="search" class="sr-only" placeholder="Enter Warehouse Name or New Shelf Name" />
            <button type="submit" class="btn btn-primary">Search</button>
            <button type="submit" class="btn btn-secondary">Reset</button>
        </form>

        <br />
        <br />

        <a class="btn btn-success" asp-action="Save" asp-controller="Warehouses">
            <i class="bg bi-plus-circle"></i> Create New Warehouses
        </a>
        <a class="btn btn-success" asp-action="SaveShavle" asp-controller="Warehouses">
            <i class="bg bi-plus-circle"></i> Create New Shelf
        </a>
        <a class="btn btn-info" asp-action="ListShabvle" asp-controller="Warehouses">
            <i class="bg bi-plus-circle"></i> See table Shelf
        </a>
        <table class="table">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Warehouse Name</th>
                    <th scope="col">Shelf Name</th>
                    <th scope="col">Location</th>
                    <th scope="col">Capacity</th>
                    <th scope="col">Creation Date</th>
                    <th scope="col">Updated Date</th>
                    <th scope="col">Edit</th>
                    <th scope="col">Delete</th>
                </tr>
            </thead>
            <tbody >
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Name</td>
                        <td>@item.Shelves.Name</td>
                        <td>@item.Location</td>
                        <td>@item.Shelves.Capacity</td>
                        <td>@item.creation</td>
                        <td>@item.updatedDate</td>
                        <td><a class="btn btn-warning btn-sm" asp-action="Edit" asp-controller="Warehouses" asp-route-id="@item.Id">Edit</a></td>
                        <td><a class="btn btn-danger btn-sm" asp-action="Delete" asp-controller="Warehouses" asp-route-id="@item.Id">Delete</a></td>
                    </tr>
                }
            </tbody>
        </table>
        <nav aria-label="Page navigation">
            <ul class="pagination">

                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("List", new { page = Model.PagiIni - 1, pageSize = Model.Count, search = Context.Request.Query["search"] })">Previous</a>
                    </li>
                }

                @for (int i = 1; i <= Model.PagiTotal; i++)
                {
                    <li class="page-item @(i == Model.PagiIni ? "active" : "")">
                        <a class="page-link" href="@Url.Action("List", new { page = i, pageSize = Model.Count, search = Context.Request.Query["search"] })">@i</a>
                    </li>
                }

                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("List", new { page = Model.PagiIni + 1, pageSize = Model.Count, search = Context.Request.Query["search"] })">Next</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>
