@model Paginated<ClientModel>
@{
    ViewData["Title"] = "Listar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>List Customer</h1>

<div class="card">
    <div class="card-header">
        List Customer
    </div>
    <div class="card-body">
        <form method="get" class="form-inline" action="@Url.Action("Listar", "Mante")">
            <input type="text" name="search" class=" sr-only" placeholder="Enter last name or name" />
            <button type="submit" class="btn btn-primary">Search</button>
            <button type="submit" class="btn btn-primary">Reset</button>
        </form>
        <br />
        <br />
        <a class="btn btn-success" asp-action="Save" asp-controller="Mante"> <i class="bg bi-plus-circle"></i> Create New</a>
       
        <table class="table">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Name</th>
                    <th scope="col">LastName</th>
                    <th scope="col">DNI</th>
                    <th scope="col">Email</th>
                    <th scope="col">Phone</th>
                    <th scope="col">Role</th>
                    <th scope="col">Creation</th>
                    <th scope="col">Update</th>
                    <th scope="col">Creation by</th>
                    <th scope="col">Edit</th>
                    <th scope="col">Delete</th>
                </tr>
            </thead>
            <tbody>

                @foreach(var items in Model)
                {
                    <tr>
                   
                        <td>@items.Id</td>
                        <td>@items.Name</td>
                        <td>@items.LastName</td>
                        <td>@items.IDClient</td>
                        <td>@items.Email</td>
                        <td>@items.Phone</td>
                        <td>@items.Role</td>
                        <td>@items.CreationDate</td>
                        <td>@items.UpdateDate</td>
                        <td>@items.NameEmplooye</td>
                        <td> <a class="btn btn-warning btn-sm" asp-action="Edit" asp-controller="Mante" asp-route-idUser="@items.Id">Edit</a></td>
                        <td> <a class="btn btn-danger btn-sm" asp-action="Delete" asp-controller="Mante" asp-route-idUser="@items.Id">Delete</a></td>
                    </tr>

                }
            </tbody>
        </table>
        <nav aria-label="Page navigation">
            <ul class="pagination">

                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("List", new { page = Model.PagiIni - 1, pageSize = Model.Count, search = Context.Request.Query["search"] })">Previous</a>
                    </li>
                }

                @for (int i = 1; i <= Model.PagiTotal; i++)
                {
                    <li class="page-item @(i == Model.PagiIni ? "active" : "")">
                        <a class="page-link" href="@Url.Action("List", new { page = i, pageSize = Model.Count, search = Context.Request.Query["search"] })">@i</a>
                    </li>
                }

                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("List", new { page = Model.PagiIni + 1, pageSize = Model.Count, search = Context.Request.Query["search"] })">Next</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>
