CREATE DATABASE pawnShop;
GO

USE pawnShop;
GO
-- Create the employees table
CREATE TABLE employees (
  id INT IDENTITY(1,1) PRIMARY KEY,
  name VARCHAR(255),
  phone varchar(125),
  lastName Varchar(27),
  userID VARCHAR(30),
  email VARCHAR(255),
  password VARCHAR(255),
  role VARCHAR(255),
  hiring_date DATE,
  creation_date DATETIME,
  modification_date DATETIME
);
GO
CREATE TABLE users (
  id INT IDENTITY(1,1) PRIMARY KEY,
  IDClient VARCHAR(125),
  name VARCHAR(255),
  lastName Varchar(27),
  email VARCHAR(255),
  password VARCHAR(255),
  phone varchar(18),
  role VARCHAR(50),
  creation_date DATETIME,
  modification_date DATETIME,
  created_by_employee_id INT,
update_by_employee_id int,
  FOREIGN KEY (created_by_employee_id) REFERENCES employees(id)
);

go
-- Create the warehouses table
CREATE TABLE warehouses (
  id INT IDENTITY(1,1) PRIMARY KEY,
  name VARCHAR(255),
  location VARCHAR(255),
  creation_date DATETIME,
  modification_date DATETIME
);
go
-- Create the shelves table
CREATE TABLE shelves (
  id INT IDENTITY(1,1) PRIMARY KEY,
  name varchar(255),
  warehouse_id INT,
  capacity INT,
  creation_date DATETIME,
  modification_date DATETIME ,
  FOREIGN KEY (warehouse_id) REFERENCES warehouses(id)
);

-- Create the items table
CREATE TABLE items (
  id INT IDENTITY(1,1) PRIMARY KEY,
  name VARCHAR(255),
  description TEXT,
  estimated_value DECIMAL(10,2),
  shelf_id INT,
  creation_date DATETIME  ,
  modification_date DATETIME ,
  FOREIGN KEY (shelf_id) REFERENCES shelves(id)
);

-- Create the pawns table
CREATE TABLE pawns (
  id INT IDENTITY(1,1) PRIMARY KEY,
  user_id INT,
  item_id INT,
  pawn_date DATE,
  shelf_id INT,
  creation_date DATETIME,
  modification_date DATETIME,
  FOREIGN KEY (user_id) REFERENCES users(id),
  FOREIGN KEY (item_id) REFERENCES items(id),
  FOREIGN KEY (shelf_id) REFERENCES shelves(id)
);

-- Create the transaction types table
CREATE TABLE transaction_types (
  id INT IDENTITY(1,1) PRIMARY KEY,
  transaction_type VARCHAR(255),
  creation_date DATETIME ,
  modification_date DATETIME
);

-- Create the transactions table
CREATE TABLE transactions (
  id INT IDENTITY(1,1) PRIMARY KEY,
  user_id INT,
  transaction_type_id INT,
  amount DECIMAL(10,2),
  transaction_date DATE,
  shelf_id INT,
  creation_date DATETIME,
  modification_date DATETIME ,
  FOREIGN KEY (user_id) REFERENCES users(id),
  FOREIGN KEY (transaction_type_id) REFERENCES transaction_types(id),
  FOREIGN KEY (shelf_id) REFERENCES shelves(id)
);
CREATE PROCEDURE InsertWarehouseAndShelfData
    @warehouseName VARCHAR(255),
    @warehouseLocation VARCHAR(255),
    @shelfName VARCHAR(255),
    @shelfCapacity INT
AS
BEGIN
    DECLARE @warehouseId INT;

    -- Insert data into warehouses table
    INSERT INTO warehouses (name, location, creation_date)
    VALUES (@warehouseName, @warehouseLocation, GETDATE());

    SET @warehouseId = SCOPE_IDENTITY();

    -- Insert data into shelves table
    INSERT INTO shelves (name, warehouse_id, capacity, creation_date)
    VALUES (@shelfName, @warehouseId, @shelfCapacity, GETDATE());
END;

CREATE PROCEDURE UpdateWarehouseDetails
    @id INT,
    @newWarehouseName NVARCHAR(255),
    @newShelfName NVARCHAR(255),
    @newLocation NVARCHAR(255),
    @newCapacity INT
AS
BEGIN
    -- Update warehouse details
    UPDATE warehouses
    SET 
        name = @newWarehouseName,
        location = @newLocation,
        modification_date = GETDATE()
    WHERE 
        id = @id;

    -- Update shelf details
    UPDATE shelves
    SET 
        name = @newShelfName,
        capacity = @newCapacity,
        modification_date = GETDATE()
    WHERE 
        warehouse_id = @id;
END; 

CREATE PROCEDURE dbo.UpdateShelf
    @shelfId INT,
    @newName VARCHAR(255),
    @newWarehouseId INT,
    @newCapacity INT
AS
BEGIN
    UPDATE shelves
    SET
        name = @newName,
        warehouse_id = @newWarehouseId,
        capacity = @newCapacity,
        modification_date = GETDATE()
    WHERE
        id = @shelfId;
END;
